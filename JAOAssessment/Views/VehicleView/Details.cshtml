@model JAOAssessment.Models.Vehicle

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Vehicle</h4>
    <hr />

   @* <div class="accordion">  
        <div id="accordion">  
          <h3>This is the Title1</h3>  
          <div>  
            <p>  
            Mauris mauris ante, blandit et, ultrices a, suscipit eget, quam. Integer  
            ut neque. Vivamus nisi metus, molestie vel, gravida in, condimentum sit  
            amet, nunc. Nam a nibh. Donec suscipit eros. Nam mi. Proin viverra leo ut  
            odio. Curabitur malesuada. Vestibulum a velit eu ante scelerisque vulputate.  
            </p>  
          </div>  
          <h3>This is the Title2</h3>  
          <div>  
            <p>  
            Sed non urna. Donec et ante. Phasellus eu ligula. Vestibulum sit amet  
            purus. Vivamus hendrerit, dolor at aliquet laoreet, mauris turpis porttitor  
            velit, faucibus interdum tellus libero ac justo. Vivamus non quam. In  
            suscipit faucibus urna.  
            </p>  
          </div>  
        </div>  
    </div> *@

    @*<button class="accordion">@Html.DisplayNameFor(model => model.Model)</button>
        <div id = "Model" class="panel">
          <p id = "ModelText">This is for the Model</p>
        </div>

    <button class="accordion">Section 2</button>
        <div class="panel">
          <p>Lorem ipsum...</p>
        </div>

    <button class="accordion">Section 3</button>
        <div class="panel">
          <p>Lorem ipsum...</p>
        </div>*@


  <div class="accordion" id="vehicleAccordion">
      @*start of one*@
  <div class="accordion-item">
    <h2 class="accordion-header" id="ModelHead">
      <button
        class="accordion-button"
        type="button"
        data-mdb-toggle="collapse"
        data-mdb-target="#collapseModel"
        aria-expanded="true"
        aria-controls="collapseModel"
      >
        @*Html.DisplayNameFor(model => model.Model)*@
        Bleh
      </button>
    </h2>
    <div
      id="collapseModel"
      class="accordion-collapse collapse show"
      aria-labelledby="ModelHead"
      data-mdb-parent="#vehicleAccordion"
    >
      <div class="accordion-body">
        <strong>This is the first item's accordion body.</strong> It is hidden by default,
        until the collapse plugin adds the appropriate classes that we use to style each
        element. These classes control the overall appearance, as well as the showing and
        hiding via CSS transitions. You can modify any of this with custom CSS or
        overriding our default variables. It's also worth noting that just about any HTML
        can go within the <strong>.accordion-body</strong>, though the transition does
        limit overflow.
      </div>
    </div>
  </div>
  @*end of one*@
</div>


    @*<dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ID)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ID)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Model)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Model)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Engine)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Engine)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Paint)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Paint)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Interior)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Interior)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
    </dl>*@
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="ViewIndex">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

  @*  <script type="text/javascript">  
    $(function () {  
        $("#accordion").accordion();  
    });  
    </script> *@

   <script>
        var acc = document.getElementsByClassName("accordion");
        var i;

        for (i = 0; i < acc.length; i++) {
          acc[i].addEventListener("click", function() {
            this.classList.toggle("active");
            var panel = this.nextElementSibling;
            if (panel.style.maxHeight) {
              panel.style.maxHeight = null;
            } else {
              panel.style.maxHeight = panel.scrollHeight + "px";
            }
          });
        }
    </script>



}
